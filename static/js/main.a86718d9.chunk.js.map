{"version":3,"sources":["components/ShowTodos.js","components/CreateTodo.js","App.js","reportWebVitals.js","index.js"],"names":["ShowTodos","useState","url","todos","setTodos","title","isEdit","date","Date","toLocaleTimeString","initTodo","todo","setTodo","editedTodo","setEditTodo","fetchAllTodos","fetch","then","res","console","log","json","data","catch","err","useEffect","onSubmit","e","a","preventDefault","method","headers","body","JSON","stringify","updateInput","target","name","value","clickUpdateBtn","_id","error","clickDelBtn","thisTodo","className","type","placeholder","onChange","style","color","length","map","t","onClick","updatedTodos","clickEditBtn","disabled","CreateTodo","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a86718d9.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n    AiFillEdit,\r\n    AiFillDelete,\r\n    AiOutlineCheck,\r\n    AiOutlinePlus\r\n} from 'react-icons/ai';\r\n// import {\r\n//     ImCheckboxUnchecked,\r\n//     ImCheckboxChecked\r\n// } from 'react-icons/im'\r\n\r\nfunction ShowTodos () {\r\n    // const [url] = useState(\"http://localhost:9000/todos\")\r\n    const [url] = useState(\"https://todo-lit.herokuapp.com/todos\")\r\n    const [todos, setTodos] = useState([])\r\n    const [initTodo] = useState({\r\n        title: \"\",\r\n        isEdit: false,\r\n        date: new Date().toLocaleTimeString()\r\n    })\r\n    const [todo, setTodo] = useState(initTodo)\r\n    const [editedTodo, setEditTodo] = useState({title: \"\"})\r\n\r\n    const fetchAllTodos = () => {\r\n        fetch(url)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            console.log(data)\r\n            setTodos(data)\r\n        })\r\n        .catch(err => console.log(err))        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchAllTodos()\r\n    }, [])\r\n\r\n    const changeInput = (e) => {\r\n        console.log(e.target.value)\r\n        setTodo({...todo, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(todo)\r\n\r\n        await fetch(url,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify(todo)\r\n        })\r\n        .then(res=> res.json())\r\n        .then(data => console.log(data))\r\n        .catch(err=>console.log(err))\r\n\r\n        setTodo(initTodo)\r\n        fetchAllTodos()\r\n    }\r\n\r\n    const clickEditBtn = (thisTodo) => {\r\n        console.log(thisTodo)\r\n        const updatedTodos = todos.map(todo => {\r\n            if(todo._id===thisTodo._id) {\r\n                setEditTodo(thisTodo)\r\n                return {...todo, isEdit: !todo.isEdit}\r\n            } else {\r\n                return {...todo, isEdit: false}\r\n            }\r\n        })\r\n        console.log(updatedTodos)\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const updateInput = (e) => {\r\n        setEditTodo({...editedTodo, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const clickUpdateBtn = async() => {\r\n        console.log(editedTodo)\r\n        await fetch(`${url}/${editedTodo._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n                // \"Content-Type\" : \"application/x-www-form-urlencoded\"\r\n                // \"Content-Type\" : \"multipart/form-data\"\r\n                // \"Content-Type\" : \"text/plain\"\r\n            },\r\n            body: JSON.stringify(editedTodo)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n        .catch(err => console.error(err))\r\n        fetchAllTodos()\r\n    }\r\n\r\n    const clickDelBtn = async(thisTodo) => {\r\n        await fetch(`${url}/${thisTodo._id}`, {\r\n            method: \"DELETE\",\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n        .catch(err => console.error(err))\r\n        fetchAllTodos()\r\n    } \r\n\r\n\r\n    return (\r\n        <main>\r\n            <h1>todo list</h1>\r\n            <section className=\"wrapper\">\r\n                <form className=\"add-todo-div\" onSubmit={onSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"todo...\"\r\n                    name=\"title\"\r\n                    value={todo.title}\r\n                    onChange={changeInput}\r\n                    />\r\n                <button style={{color: todo.title.length>0 ? \"#000\" : \"grey\"}}><AiOutlinePlus/>add</button>\r\n                {/* <input type=\"submit\" value=\"add todo\"/> */}\r\n            </form>         \r\n                <ol className=\"todos-div\">\r\n                    { todos.map(t=>\r\n                        <li className=\"add-todo\" key={t._id} >\r\n                            <AiFillEdit  onClick={()=>{clickEditBtn(t)}}/>\r\n                            <AiFillDelete onClick={()=>{clickDelBtn(t)}} />\r\n                            {\r\n                                // t.isDone ? <ImCheckboxChecked/> : <ImCheckboxUnchecked />\r\n                            }\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder={t.title}\r\n                                name=\"title\"\r\n                                value={t.isEdit ? editedTodo.title: t.title }\r\n                                disabled={!t.isEdit}\r\n                                onChange={updateInput}\r\n                                />\r\n                                { t.isEdit && <button onClick={clickUpdateBtn}><AiOutlineCheck />confirm</button>}\r\n                        </li>\r\n                    )}                    \r\n                </ol>\r\n            </section>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ShowTodos;","import React from 'react'\r\n\r\nfunction CreateTodo () {\r\n    return(\r\n        <main>\r\n            CreateTodo\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default CreateTodo;","import './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport ShowTodos from './components/ShowTodos';\nimport CreateTodo from './components/CreateTodo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav>\n          <Route exact path=\"/\" component={ShowTodos} />\n          <Route path=\"/create-todo\" component={CreateTodo} />\n        </nav>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}